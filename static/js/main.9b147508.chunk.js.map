{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","todosList","App","list","useState","setTodos","Math","max","setId","titleError","setTitleError","userError","setUserError","handleChange","event","target","Error","action","method","onSubmit","preventDefault","currentTarget","value","trim","Number","reset","type","onChange","placeholder","disabled","selected","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b147508.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FC } from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const { title, completed, user } = todo;\n\n  return (\n    <article\n      data-id=\"1\"\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo data-id={todo.id} todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import { FC, useState } from 'react';\n\nimport './App.scss';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find((user) => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todosList: Todo[] = todosFromServer.map((todo) => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nfunction highestTodoId(list: Todo[]): number {\n  const highest = Math.max(...list.map((todo) => todo.id));\n\n  return highest;\n}\n\nexport const App: FC = () => {\n  const [todos, setTodos] = useState(todosList);\n  const [id, setId] = useState(highestTodoId(todos));\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  function handleChange(\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) {\n    switch (event.target.name) {\n      case 'title':\n        setTitleError(false);\n        break;\n      case 'user':\n        setUserError(false);\n        break;\n      default:\n        throw new Error('error');\n    }\n  }\n\n  function handleSubmit(event: any) {\n    event.preventDefault();\n\n    const { title, user } = event.currentTarget;\n\n    if (!title.value.trim()) {\n      setTitleError(true);\n    }\n\n    if (user.value === '0') {\n      setUserError(true);\n    }\n\n    if (!title.value.trim() || user.value === '0') {\n      return;\n    }\n\n    const todo: Todo = {\n      id: id + 1,\n      title: title.value,\n      completed: false,\n      userId: Number(user.value),\n      user: getUser(Number(user.value)),\n    };\n\n    setTodos([...todos, todo]);\n    setId(id + 1);\n\n    event.currentTarget.reset();\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          Title:\n          <input\n            type=\"text\"\n            onChange={handleChange}\n            name=\"title\"\n            data-cy=\"titleInput\"\n            placeholder=\"input title\"\n          />\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          User:\n          <select name=\"user\" onChange={handleChange} data-cy=\"userSelect\">\n            <option value=\"0\" disabled selected>\n              Choose a user\n            </option>\n            {usersFromServer.map((user) => {\n              return (\n                <option key={user.id} value={user.id}>\n                  {user.name}\n                </option>\n              );\n            })}\n          </select>\n          {userError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}